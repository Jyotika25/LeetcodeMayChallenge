/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void check( TreeNode* root, int x, int y, int level,int &levelx,int &levely,int &parentx,int &parenty)
    {
        if(root==NULL){
            return;
        }
        
        if(root->left!=NULL){
            if(root->left->val == x){
                parentx = root->val;
                levelx = level+1;
            }
            else if(root->left->val==y){
                parenty = root->val;
                levely =level+1;
            }
        }
        
        if(root->right!=NULL){
            if(root->right->val == x){
                parentx = root->val;
                levelx= level+1;
            }
            else if(root->right->val==y){
                parenty = root->val;
                levely = level+1;
            }
        }
        
        if(levelx!=-1 && levely!=-1){
            return;
        }
        
        check(root->left ,x,y,level+1,levelx,levely,parentx,parenty);
        check(root->right,x,y,level+1,levelx,levely,parentx,parenty);
    }
    
    bool isCousins(TreeNode* root, int x, int y) {
        int parx=0;
        int pary=0;
        int levx=-1;
        int levy=-1;
        
        check(root,x,y, 0,levx,levy,parx,pary);
        return(levx==levy && parx!=pary);
        
    }
};
